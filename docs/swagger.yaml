definitions:
  conf.Conf:
    properties:
      cors:
        $ref: '#/definitions/conf.Cors'
      debug:
        type: boolean
      dsn:
        type: string
      email:
        $ref: '#/definitions/conf.Email'
      jwt_salt:
        type: string
      max_conn:
        type: integer
      max_idle:
        type: integer
      max_left_time:
        type: integer
      name:
        type: string
      rest_addr:
        type: string
      version:
        type: string
    type: object
  conf.Cors:
    properties:
      allow_credentials:
        type: boolean
      allowed_headers:
        items:
          type: string
        type: array
      allowed_methods:
        items:
          type: string
        type: array
      allowed_origins:
        items:
          type: string
        type: array
      enabled:
        type: boolean
      max_age:
        type: integer
    type: object
  conf.Email:
    properties:
      imap:
        type: string
      pass:
        type: string
      smtp:
        type: string
      user:
        type: string
    type: object
  driver.NoteInstance:
    properties:
      content:
        type: string
      title:
        type: string
      updated_time:
        type: string
    type: object
  rest.EnableConfRequest:
    properties:
      conf:
        $ref: '#/definitions/conf.Conf'
    type: object
  rest.EnableConfResponse:
    properties:
      error:
        type: integer
      more:
        type: string
      msg:
        type: string
      parameters:
        $ref: '#/definitions/rest.EnableConfRequest'
    type: object
  rest.ListCateResponse:
    properties:
      data:
        items:
          type: string
        type: array
      error:
        type: integer
      more:
        type: string
      msg:
        type: string
    type: object
  rest.ListConfResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/conf.Conf'
        type: array
      error:
        type: integer
      main_conf:
        type: string
      more:
        type: string
      msg:
        type: string
    type: object
  rest.ListNoteResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/driver.NoteInstance'
        type: array
      error:
        type: integer
      more:
        type: string
      msg:
        type: string
    type: object
  rest.NewCateRequest:
    properties:
      cate:
        type: string
    type: object
  rest.NewCateResponse:
    properties:
      error:
        type: integer
      more:
        type: string
      msg:
        type: string
      parameters:
        $ref: '#/definitions/rest.NewCateRequest'
    type: object
  rest.NewNoteRequest:
    properties:
      cate:
        type: string
      content:
        type: string
      title:
        type: string
    type: object
  rest.NewNoteResponse:
    properties:
      error:
        type: integer
      more:
        type: string
      msg:
        type: string
      parameters:
        $ref: '#/definitions/rest.NewNoteRequest'
    type: object
  rest.Response:
    properties:
      error:
        type: integer
      more:
        type: string
      msg:
        type: string
    type: object
  rest.VersionResponse:
    properties:
      apiVersion:
        type: string
    type: object
info:
  contact: {}
paths:
  /p/{cate}/list-note:
    get:
      parameters:
      - description: Category
        in: path
        name: cate
        type: string
      - description: Keyword
        in: query
        name: keyword
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/rest.ListNoteResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: List notebooks
      tags:
      - public apis
  /p/enable-conf:
    post:
      parameters:
      - description: request parameters, must be fill in
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/rest.EnableConfRequest'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/rest.EnableConfResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: upsert & enable a configuration
      tags:
      - public apis
  /p/health:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: k8s health check
      tags:
      - public apis
  /p/list-cate:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/rest.ListCateResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: List notebook categories
      tags:
      - public apis
  /p/list-conf:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/rest.ListConfResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: List notebook configurations
      tags:
      - public apis
  /p/list-note:
    get:
      parameters:
      - description: Keyword
        in: query
        name: keyword
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/rest.ListNoteResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: List all notebooks
      tags:
      - public apis
  /p/new-cate:
    post:
      parameters:
      - description: request parameters, must be fill in
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/rest.NewCateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/rest.NewCateResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Add a new cate
      tags:
      - public apis
  /p/new-note:
    post:
      parameters:
      - description: request parameters, must be fill in
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/rest.NewNoteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/rest.NewNoteResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Add a new note
      tags:
      - public apis
  /p/pull:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/rest.Response'
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: pull fit attachment from email
      tags:
      - public apis
  /p/push:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/rest.Response'
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: push all notes to email
      tags:
      - public apis
  /p/version:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/rest.VersionResponse'
      summary: Get current api version
      tags:
      - public apis
swagger: "2.0"
