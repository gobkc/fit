// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/p/enable-conf": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public apis"
                ],
                "summary": "upsert \u0026 enable a configuration",
                "parameters": [
                    {
                        "description": "request parameters, must be fill in",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.EnableConfRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/rest.EnableConfResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/p/health": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public apis"
                ],
                "summary": "k8s health check",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/p/list-cate": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public apis"
                ],
                "summary": "List notebook categories",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/rest.ListCateResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/p/list-conf": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public apis"
                ],
                "summary": "List notebook configurations",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/rest.ListConfResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/p/list-note": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public apis"
                ],
                "summary": "List all notebooks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Keyword",
                        "name": "keyword",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/rest.ListNoteResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/p/new-cate": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public apis"
                ],
                "summary": "Add a new cate",
                "parameters": [
                    {
                        "description": "request parameters, must be fill in",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.NewCateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/rest.NewCateResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/p/new-note": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public apis"
                ],
                "summary": "Add a new note",
                "parameters": [
                    {
                        "description": "request parameters, must be fill in",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.NewNoteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/rest.NewNoteResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/p/pull": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public apis"
                ],
                "summary": "pull fit attachment from email",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/rest.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/p/push": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public apis"
                ],
                "summary": "push all notes to email",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/rest.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/p/version": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public apis"
                ],
                "summary": "Get current api version",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/rest.VersionResponse"
                        }
                    }
                }
            }
        },
        "/p/{cate}/list-note": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public apis"
                ],
                "summary": "List notebooks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category",
                        "name": "cate",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Keyword",
                        "name": "keyword",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/rest.ListNoteResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "conf.Conf": {
            "type": "object",
            "properties": {
                "cors": {
                    "$ref": "#/definitions/conf.Cors"
                },
                "debug": {
                    "type": "boolean"
                },
                "dsn": {
                    "type": "string"
                },
                "email": {
                    "$ref": "#/definitions/conf.Email"
                },
                "jwt_salt": {
                    "type": "string"
                },
                "max_conn": {
                    "type": "integer"
                },
                "max_idle": {
                    "type": "integer"
                },
                "max_left_time": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "rest_addr": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "conf.Cors": {
            "type": "object",
            "properties": {
                "allow_credentials": {
                    "type": "boolean"
                },
                "allowed_headers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "allowed_methods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "allowed_origins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enabled": {
                    "type": "boolean"
                },
                "max_age": {
                    "type": "integer"
                }
            }
        },
        "conf.Email": {
            "type": "object",
            "properties": {
                "imap": {
                    "type": "string"
                },
                "pass": {
                    "type": "string"
                },
                "smtp": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "driver.NoteInstance": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_time": {
                    "type": "string"
                }
            }
        },
        "rest.EnableConfRequest": {
            "type": "object",
            "properties": {
                "conf": {
                    "$ref": "#/definitions/conf.Conf"
                }
            }
        },
        "rest.EnableConfResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "integer"
                },
                "more": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                },
                "parameters": {
                    "$ref": "#/definitions/rest.EnableConfRequest"
                }
            }
        },
        "rest.ListCateResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "error": {
                    "type": "integer"
                },
                "more": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "rest.ListConfResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/conf.Conf"
                    }
                },
                "error": {
                    "type": "integer"
                },
                "main_conf": {
                    "type": "string"
                },
                "more": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "rest.ListNoteResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/driver.NoteInstance"
                    }
                },
                "error": {
                    "type": "integer"
                },
                "more": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "rest.NewCateRequest": {
            "type": "object",
            "properties": {
                "cate": {
                    "type": "string"
                }
            }
        },
        "rest.NewCateResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "integer"
                },
                "more": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                },
                "parameters": {
                    "$ref": "#/definitions/rest.NewCateRequest"
                }
            }
        },
        "rest.NewNoteRequest": {
            "type": "object",
            "properties": {
                "cate": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "rest.NewNoteResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "integer"
                },
                "more": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                },
                "parameters": {
                    "$ref": "#/definitions/rest.NewNoteRequest"
                }
            }
        },
        "rest.Response": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "integer"
                },
                "more": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "rest.VersionResponse": {
            "type": "object",
            "properties": {
                "apiVersion": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
